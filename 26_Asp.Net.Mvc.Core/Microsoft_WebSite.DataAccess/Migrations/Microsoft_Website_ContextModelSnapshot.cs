// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Microsoft_WebSite.DataAccess;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Microsoft_WebSite.DataAccess.Migrations
{
    [DbContext(typeof(Microsoft_Website_Context))]
    partial class Microsoft_Website_ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft_WebSite.DataAccess.Entities.AboutUs", b =>
                {
                    b.Property<int>("AboutUsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AboutUsID"));

                    b.Property<string>("AboutUsContent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AboutUsTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AboutUsID");

                    b.ToTable("AboutUsTable");
                });

            modelBuilder.Entity("Microsoft_WebSite.DataAccess.Entities.ContactUs", b =>
                {
                    b.Property<int>("ContactUsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ContactUsID"));

                    b.Property<string>("ContactAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ContactUsID");

                    b.ToTable("ContactUsTable");
                });

            modelBuilder.Entity("Microsoft_WebSite.DataAccess.Entities.Package", b =>
                {
                    b.Property<int>("PackageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PackageID"));

                    b.Property<string>("PackageContent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PackageTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PackageID");

                    b.ToTable("Packages");

                    b.HasData(
                        new
                        {
                            PackageID = 1,
                            PackageContent = "Free Plan",
                            PackageTitle = "Free"
                        },
                        new
                        {
                            PackageID = 2,
                            PackageContent = "Pro Plan",
                            PackageTitle = "Pro"
                        },
                        new
                        {
                            PackageID = 3,
                            PackageContent = "Enterprise Plan",
                            PackageTitle = "Enterprise"
                        });
                });

            modelBuilder.Entity("Microsoft_WebSite.DataAccess.Entities.PackageFeature", b =>
                {
                    b.Property<int>("PackageFeatureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PackageFeatureID"));

                    b.Property<string>("PackageFeatureTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PackageFeatureID");

                    b.ToTable("PackageFeatures");

                    b.HasData(
                        new
                        {
                            PackageFeatureID = 1,
                            PackageFeatureTitle = "Public"
                        },
                        new
                        {
                            PackageFeatureID = 2,
                            PackageFeatureTitle = "Private"
                        },
                        new
                        {
                            PackageFeatureID = 3,
                            PackageFeatureTitle = "Permissions"
                        },
                        new
                        {
                            PackageFeatureID = 4,
                            PackageFeatureTitle = "Sharing"
                        },
                        new
                        {
                            PackageFeatureID = 5,
                            PackageFeatureTitle = "Unlimited members"
                        },
                        new
                        {
                            PackageFeatureID = 6,
                            PackageFeatureTitle = "Extra security"
                        });
                });

            modelBuilder.Entity("Microsoft_WebSite.DataAccess.Entities.PackageProductUnit", b =>
                {
                    b.Property<int>("PackageProductUnitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PackageProductUnitID"));

                    b.Property<string>("PackageProductUnitContent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PackageProductUnitPrice")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PackageProductUnitTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PackageProductUnitID");

                    b.ToTable("PackageProductUnits");

                    b.HasData(
                        new
                        {
                            PackageProductUnitID = 1,
                            PackageProductUnitContent = "10 users included",
                            PackageProductUnitPrice = "100",
                            PackageProductUnitTitle = "users included"
                        },
                        new
                        {
                            PackageProductUnitID = 2,
                            PackageProductUnitContent = "2 GB of storage",
                            PackageProductUnitPrice = "10",
                            PackageProductUnitTitle = "GB of storage"
                        });
                });

            modelBuilder.Entity("Microsoft_WebSite.DataAccess.Entities.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ServiceId"));

                    b.Property<string>("ServiceContent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ServiceImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ServiceTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ServiceId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("Microsoft_WebSite.DataAccess.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserID"));

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserUsername")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("userRole")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            UserEmail = "trkhamarat@gmail.com",
                            UserPassword = "123456",
                            UserUsername = "trkhamarat",
                            userRole = "Admin"
                        });
                });

            modelBuilder.Entity("PackagePackageFeature", b =>
                {
                    b.Property<int>("PackageFeaturesPackageFeatureID")
                        .HasColumnType("integer");

                    b.Property<int>("PackagesPackageID")
                        .HasColumnType("integer");

                    b.HasKey("PackageFeaturesPackageFeatureID", "PackagesPackageID");

                    b.HasIndex("PackagesPackageID");

                    b.ToTable("PackagePackageFeature");
                });

            modelBuilder.Entity("PackagePackageProductUnit", b =>
                {
                    b.Property<int>("PackageProductUnitsPackageProductUnitID")
                        .HasColumnType("integer");

                    b.Property<int>("PackagesPackageID")
                        .HasColumnType("integer");

                    b.HasKey("PackageProductUnitsPackageProductUnitID", "PackagesPackageID");

                    b.HasIndex("PackagesPackageID");

                    b.ToTable("PackagePackageProductUnit");
                });

            modelBuilder.Entity("PackagePackageFeature", b =>
                {
                    b.HasOne("Microsoft_WebSite.DataAccess.Entities.PackageFeature", null)
                        .WithMany()
                        .HasForeignKey("PackageFeaturesPackageFeatureID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft_WebSite.DataAccess.Entities.Package", null)
                        .WithMany()
                        .HasForeignKey("PackagesPackageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PackagePackageProductUnit", b =>
                {
                    b.HasOne("Microsoft_WebSite.DataAccess.Entities.PackageProductUnit", null)
                        .WithMany()
                        .HasForeignKey("PackageProductUnitsPackageProductUnitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft_WebSite.DataAccess.Entities.Package", null)
                        .WithMany()
                        .HasForeignKey("PackagesPackageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
