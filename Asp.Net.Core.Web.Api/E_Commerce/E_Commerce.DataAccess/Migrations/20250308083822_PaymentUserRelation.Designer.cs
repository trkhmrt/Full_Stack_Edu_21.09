// <auto-generated />
using System;
using E_Commerce.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Commerce.DataAccess.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20250308083822_PaymentUserRelation")]
    partial class PaymentUserRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_Commerce.DataAccess.Model.Basket", b =>
                {
                    b.Property<int>("basketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("basketId"));

                    b.Property<int>("basketStatusId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("basketId");

                    b.HasIndex("basketStatusId");

                    b.HasIndex("userId");

                    b.ToTable("Baskets");

                    b.HasData(
                        new
                        {
                            basketId = 1,
                            basketStatusId = 1,
                            userId = 1
                        },
                        new
                        {
                            basketId = 2,
                            basketStatusId = 3,
                            userId = 2
                        },
                        new
                        {
                            basketId = 3,
                            basketStatusId = 3,
                            userId = 4
                        });
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.BasketDetail", b =>
                {
                    b.Property<int>("basketDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("basketDetailId"));

                    b.Property<int>("basketId")
                        .HasColumnType("int");

                    b.Property<int>("basket_quantity")
                        .HasColumnType("int");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.HasKey("basketDetailId");

                    b.HasIndex("basketId");

                    b.HasIndex("productId");

                    b.ToTable("BasketDetails");

                    b.HasData(
                        new
                        {
                            basketDetailId = 1,
                            basketId = 1,
                            basket_quantity = 1,
                            productId = 1
                        },
                        new
                        {
                            basketDetailId = 2,
                            basketId = 1,
                            basket_quantity = 1,
                            productId = 2
                        },
                        new
                        {
                            basketDetailId = 3,
                            basketId = 2,
                            basket_quantity = 1,
                            productId = 3
                        },
                        new
                        {
                            basketDetailId = 4,
                            basketId = 2,
                            basket_quantity = 1,
                            productId = 4
                        });
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.BasketStatus", b =>
                {
                    b.Property<int>("basketStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("basketStatusId"));

                    b.Property<string>("basketStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("basketStatusId");

                    b.ToTable("BasketStatuses");

                    b.HasData(
                        new
                        {
                            basketStatusId = 1,
                            basketStatusName = "Sepet Aktif"
                        },
                        new
                        {
                            basketStatusId = 2,
                            basketStatusName = "Sepet İptal"
                        },
                        new
                        {
                            basketStatusId = 3,
                            basketStatusName = "Sepet Ödemeye Hazır"
                        },
                        new
                        {
                            basketStatusId = 4,
                            basketStatusName = "Sepet Siparişe İletildi"
                        });
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.Category", b =>
                {
                    b.Property<int>("categoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("categoryId"));

                    b.Property<string>("categoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("categoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            categoryId = 1,
                            categoryDescription = "Kılık Kıyafet Ayakkabı Giyim",
                            categoryName = "giyim"
                        },
                        new
                        {
                            categoryId = 2,
                            categoryDescription = "Elektrik Elektronik İhtiyaçlar",
                            categoryName = "elektronik"
                        },
                        new
                        {
                            categoryId = 3,
                            categoryDescription = "Gıda İhtiyaçları",
                            categoryName = "gıda"
                        });
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.Order", b =>
                {
                    b.Property<int>("orderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("orderId"));

                    b.Property<int>("basketId")
                        .HasColumnType("int");

                    b.Property<DateTime>("orderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("orderStatusId")
                        .HasColumnType("int");

                    b.Property<int>("totalAmount")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("orderId");

                    b.HasIndex("basketId")
                        .IsUnique();

                    b.HasIndex("orderStatusId");

                    b.HasIndex("userId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            orderId = 1,
                            basketId = 1,
                            orderDate = new DateTime(2025, 3, 8, 11, 38, 22, 200, DateTimeKind.Local).AddTicks(9590),
                            orderStatusId = 3,
                            totalAmount = 400,
                            userId = 2
                        },
                        new
                        {
                            orderId = 2,
                            basketId = 2,
                            orderDate = new DateTime(2025, 3, 8, 11, 38, 22, 200, DateTimeKind.Local).AddTicks(9630),
                            orderStatusId = 3,
                            totalAmount = 850,
                            userId = 4
                        });
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.OrderDetail", b =>
                {
                    b.Property<int>("orderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("orderDetailId"));

                    b.Property<int>("orderId")
                        .HasColumnType("int");

                    b.Property<int>("order_product_quantity")
                        .HasColumnType("int");

                    b.Property<int>("order_product_totalPrice")
                        .HasColumnType("int");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.HasKey("orderDetailId");

                    b.HasIndex("orderId");

                    b.HasIndex("productId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            orderDetailId = 1,
                            orderId = 1,
                            order_product_quantity = 2,
                            order_product_totalPrice = 400,
                            productId = 1
                        },
                        new
                        {
                            orderDetailId = 2,
                            orderId = 1,
                            order_product_quantity = 1,
                            order_product_totalPrice = 150,
                            productId = 3
                        },
                        new
                        {
                            orderDetailId = 3,
                            orderId = 2,
                            order_product_quantity = 1,
                            order_product_totalPrice = 350,
                            productId = 4
                        },
                        new
                        {
                            orderDetailId = 4,
                            orderId = 2,
                            order_product_quantity = 1,
                            order_product_totalPrice = 650,
                            productId = 5
                        });
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.OrderStatus", b =>
                {
                    b.Property<int>("orderStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("orderStatusId"));

                    b.Property<string>("orderStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("orderStatusId");

                    b.ToTable("OrderStatuses");

                    b.HasData(
                        new
                        {
                            orderStatusId = 1,
                            orderStatusName = "Sipariş Aktif"
                        },
                        new
                        {
                            orderStatusId = 2,
                            orderStatusName = "Sipariş İptal"
                        },
                        new
                        {
                            orderStatusId = 3,
                            orderStatusName = "Sipariş Kargoya Verildi"
                        },
                        new
                        {
                            orderStatusId = 4,
                            orderStatusName = "Sipariş Tamamlandı"
                        });
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.Payment", b =>
                {
                    b.Property<int>("paymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("paymentId"));

                    b.Property<int>("basketId")
                        .HasColumnType("int");

                    b.Property<int>("paymentStatusId")
                        .HasColumnType("int");

                    b.Property<int>("totalAmount")
                        .HasColumnType("int");

                    b.Property<int>("totalQuantity")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("paymentId");

                    b.HasIndex("basketId");

                    b.HasIndex("paymentStatusId");

                    b.HasIndex("userId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.PaymentStatus", b =>
                {
                    b.Property<int>("paymentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("paymentStatusId"));

                    b.Property<string>("paymentStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("paymentStatusId");

                    b.ToTable("PaymentStatuses");

                    b.HasData(
                        new
                        {
                            paymentStatusId = 1,
                            paymentStatusName = "Ödendi"
                        },
                        new
                        {
                            paymentStatusId = 2,
                            paymentStatusName = "İade edildi"
                        },
                        new
                        {
                            paymentStatusId = 3,
                            paymentStatusName = "İptal edildi"
                        });
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.Product", b =>
                {
                    b.Property<int>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("productId"));

                    b.Property<bool>("isProductActive")
                        .HasColumnType("bit");

                    b.Property<string>("productDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("productUnitPrice")
                        .HasColumnType("int");

                    b.Property<int>("subCategoryId")
                        .HasColumnType("int");

                    b.HasKey("productId");

                    b.HasIndex("subCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            productId = 1,
                            isProductActive = true,
                            productDescription = "Ps5 Oyun Konsolu",
                            productName = "Playstation 5",
                            productUnitPrice = 10000,
                            subCategoryId = 5
                        },
                        new
                        {
                            productId = 2,
                            isProductActive = true,
                            productDescription = "Xbox Oyun Konsolu",
                            productName = "Xbox",
                            productUnitPrice = 12000,
                            subCategoryId = 5
                        },
                        new
                        {
                            productId = 3,
                            isProductActive = true,
                            productDescription = "Kışlık Su Geçirmez Bot",
                            productName = "Bot",
                            productUnitPrice = 2000,
                            subCategoryId = 1
                        },
                        new
                        {
                            productId = 4,
                            isProductActive = true,
                            productDescription = "Suya dayanıklı Çizme",
                            productName = "Çizme",
                            productUnitPrice = 4500,
                            subCategoryId = 1
                        },
                        new
                        {
                            productId = 5,
                            isProductActive = true,
                            productDescription = "Ekoseli Gömlek",
                            productName = "Gömlek",
                            productUnitPrice = 600,
                            subCategoryId = 2
                        },
                        new
                        {
                            productId = 6,
                            isProductActive = true,
                            productDescription = "Boğazlı Kazak",
                            productName = "Kazak",
                            productUnitPrice = 670,
                            subCategoryId = 2
                        });
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.Role", b =>
                {
                    b.Property<int>("roleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("roleId"));

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("roleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            roleId = 1,
                            roleName = "admin"
                        },
                        new
                        {
                            roleId = 2,
                            roleName = "customer"
                        },
                        new
                        {
                            roleId = 3,
                            roleName = "IT"
                        });
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.SubCategory", b =>
                {
                    b.Property<int>("subCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("subCategoryId"));

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<string>("subCategoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("subCategoryId");

                    b.HasIndex("categoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            subCategoryId = 1,
                            categoryId = 1,
                            subCategoryDescription = "Alt giyim ürünleri",
                            subCategoryName = "alt giyim"
                        },
                        new
                        {
                            subCategoryId = 2,
                            categoryId = 1,
                            subCategoryDescription = "üst giyim ürünleri",
                            subCategoryName = "üst giyim"
                        },
                        new
                        {
                            subCategoryId = 3,
                            categoryId = 1,
                            subCategoryDescription = "İç giyim ürünleri",
                            subCategoryName = "İç giyim"
                        },
                        new
                        {
                            subCategoryId = 4,
                            categoryId = 2,
                            subCategoryDescription = "Android Akıllı Cihazlar",
                            subCategoryName = "Akıllı Telefon"
                        },
                        new
                        {
                            subCategoryId = 5,
                            categoryId = 2,
                            subCategoryDescription = "Oyun Konsol ürünleri",
                            subCategoryName = "Oyun Konslu"
                        },
                        new
                        {
                            subCategoryId = 6,
                            categoryId = 2,
                            subCategoryDescription = "Televizyon ürünleri",
                            subCategoryName = "Televizyon"
                        });
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            userId = 1,
                            email = "trk@trk.com",
                            firstName = "tarik",
                            password = "123456",
                            userName = "trk"
                        },
                        new
                        {
                            userId = 2,
                            email = "ysf@ysf.com",
                            firstName = "yusuf",
                            password = "123456",
                            userName = "ysf"
                        },
                        new
                        {
                            userId = 3,
                            email = "tna@tna.com",
                            firstName = "tuna",
                            password = "123456",
                            userName = "tna"
                        },
                        new
                        {
                            userId = 4,
                            email = "dhn@dhn.com",
                            firstName = "duhan",
                            password = "123456",
                            userName = "dhn"
                        });
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.UserRole", b =>
                {
                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<int>("roleId")
                        .HasColumnType("int");

                    b.HasKey("userId", "roleId");

                    b.HasIndex("roleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            userId = 1,
                            roleId = 1
                        },
                        new
                        {
                            userId = 2,
                            roleId = 2
                        },
                        new
                        {
                            userId = 3,
                            roleId = 3
                        },
                        new
                        {
                            userId = 4,
                            roleId = 2
                        });
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.Basket", b =>
                {
                    b.HasOne("E_Commerce.DataAccess.Model.BasketStatus", "BasketStatus")
                        .WithMany("baskets")
                        .HasForeignKey("basketStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("E_Commerce.DataAccess.Model.User", "User")
                        .WithMany("baskets")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BasketStatus");

                    b.Navigation("User");
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.BasketDetail", b =>
                {
                    b.HasOne("E_Commerce.DataAccess.Model.Basket", "Basket")
                        .WithMany("BasketDetails")
                        .HasForeignKey("basketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce.DataAccess.Model.Product", "Product")
                        .WithMany("BasketDetails")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.Order", b =>
                {
                    b.HasOne("E_Commerce.DataAccess.Model.Basket", "Basket")
                        .WithOne("Order")
                        .HasForeignKey("E_Commerce.DataAccess.Model.Order", "basketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("E_Commerce.DataAccess.Model.OrderStatus", "OrderStatus")
                        .WithMany("orders")
                        .HasForeignKey("orderStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("E_Commerce.DataAccess.Model.User", "User")
                        .WithMany("orders")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("OrderStatus");

                    b.Navigation("User");
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.OrderDetail", b =>
                {
                    b.HasOne("E_Commerce.DataAccess.Model.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce.DataAccess.Model.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.Payment", b =>
                {
                    b.HasOne("E_Commerce.DataAccess.Model.Basket", "Basket")
                        .WithMany("Payments")
                        .HasForeignKey("basketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("E_Commerce.DataAccess.Model.PaymentStatus", "PaymentStatus")
                        .WithMany("Payments")
                        .HasForeignKey("paymentStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("E_Commerce.DataAccess.Model.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("PaymentStatus");

                    b.Navigation("User");
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.Product", b =>
                {
                    b.HasOne("E_Commerce.DataAccess.Model.SubCategory", "SubCategory")
                        .WithMany("Products")
                        .HasForeignKey("subCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.SubCategory", b =>
                {
                    b.HasOne("E_Commerce.DataAccess.Model.Category", "Category")
                        .WithMany("subCategories")
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.UserRole", b =>
                {
                    b.HasOne("E_Commerce.DataAccess.Model.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("roleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce.DataAccess.Model.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.Basket", b =>
                {
                    b.Navigation("BasketDetails");

                    b.Navigation("Order")
                        .IsRequired();

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.BasketStatus", b =>
                {
                    b.Navigation("baskets");
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.Category", b =>
                {
                    b.Navigation("subCategories");
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.OrderStatus", b =>
                {
                    b.Navigation("orders");
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.PaymentStatus", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.Product", b =>
                {
                    b.Navigation("BasketDetails");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.SubCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("E_Commerce.DataAccess.Model.User", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("UserRoles");

                    b.Navigation("baskets");

                    b.Navigation("orders");
                });
#pragma warning restore 612, 618
        }
    }
}
